## this is a python executable that will be called from GH to get curve data using Connecting_Points.pyimport Connecting_Points_0409 as cpimport Reordering_points as rpimport Graph_order as gofrom sys import argvimport flipperscript, init_curve, mapping_class, iterations = argv#mapping_class = 'aBeFcdAE'#init_curve = 'b'#iterations = 2triangulation = [(1, 8, 0), (7, ~3, ~8), (2, 6, ~7), (5, ~2, ~6), (3, 4, ~5), (~0, ~1, ~4)] edges = [1, 6, 7, 8]S = flipper.load('S_2_1')h = S.mapping_class(mapping_class)curve = S.lamination(init_curve)for i in range(int(iterations)):    curve = h(curve)oct_out = cp.octagon_only(cp.connecting(triangulation, curve.geometric),edges)reordered = rp.reorder_list(oct_out)perm = []for connection in oct_out:	i = reordered.index(connection)	perm.append(i)D = {1:3, -2:7, 6:1, -7:5, 7:2, -8:6, 8:0, -9:4}new_out = []for tup in reordered:    new_tup = ((D[tup[0][0]], tup[0][1]),(D[tup[1][0]], tup[1][1]))    new_out.append(new_tup)newer_out = []connection_reversed = []for tup in new_out:    new_tup, revd = go.graph_order(tup)    newer_out.append(new_tup)    connection_reversed.append(revd)print([new_out,connection_reversed,perm])